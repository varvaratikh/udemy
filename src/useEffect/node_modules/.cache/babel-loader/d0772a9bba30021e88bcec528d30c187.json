{"ast":null,"code":"import qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst AbstractNav = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'ul',\n  onSelect,\n  activeKey,\n  role,\n  onKeyDown,\n  ...props\n}, ref) => {\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveChild = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    const activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, {\n        ...props,\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      })\n    })\n  });\n});\nexport default AbstractNav;","map":{"version":3,"names":["qsa","React","useContext","useEffect","useRef","useForceUpdate","useMergedRefs","NavContext","SelectableContext","makeEventKey","TabContext","jsx","_jsx","noop","AbstractNav","forwardRef","as","Component","onSelect","activeKey","role","onKeyDown","props","ref","forceUpdate","needsRefocusRef","parentOnSelect","tabContext","getControlledId","getControllerId","listNode","getNextActiveChild","offset","currentListNode","current","items","activeChild","querySelector","index","indexOf","nextIndex","length","handleSelect","key","event","handleKeyDown","nextActiveChild","preventDefault","dataset","rbEventKey","focus","mergedRef","Provider","value","children"],"sources":["/Users/varvaratihonova/WebstormProjects/udemy/src/useEffect/node_modules/react-bootstrap/esm/AbstractNav.js"],"sourcesContent":["import qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst AbstractNav = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'ul',\n  onSelect,\n  activeKey,\n  role,\n  onKeyDown,\n  ...props\n}, ref) => {\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  const listNode = useRef(null);\n\n  const getNextActiveChild = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    const activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    let nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, { ...props,\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      })\n    })\n  });\n});\nexport default AbstractNav;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}