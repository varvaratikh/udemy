{"ast":null,"code":"import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","map":{"version":3,"names":["React","createChainedFunction","jsx","_jsx","isTrivialHref","href","trim","SafeAnchor","forwardRef","as","Component","disabled","onKeyDown","props","ref","handleClick","event","onClick","preventDefault","stopPropagation","handleKeyDown","key","role","tabIndex","displayName"],"sources":["/Users/varvaratihonova/WebstormProjects/udemy/src/useEffect/node_modules/react-bootstrap/esm/SafeAnchor.js"],"sourcesContent":["import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAE/C,SAASC,aAAaA,CAACC,IAAI,EAAE;EAC3B,OAAO,CAACA,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,UAAU,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,CAAC;EAChD;EACAC,EAAE,EAAEC,SAAS,GAAG,GAAG;EACnBC,QAAQ;EACRC,SAAS;EACT,GAAGC;AACL,CAAC,EAAEC,GAAG,KAAK;EACT,MAAMC,WAAW,GAAGC,KAAK,IAAI;IAC3B,MAAM;MACJX,IAAI;MACJY;IACF,CAAC,GAAGJ,KAAK;IAET,IAAIF,QAAQ,IAAIP,aAAa,CAACC,IAAI,CAAC,EAAE;MACnCW,KAAK,CAACE,cAAc,CAAC,CAAC;IACxB;IAEA,IAAIP,QAAQ,EAAE;MACZK,KAAK,CAACG,eAAe,CAAC,CAAC;MACvB;IACF;IAEAF,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACD,KAAK,CAAC;EAC3C,CAAC;EAED,MAAMI,aAAa,GAAGJ,KAAK,IAAI;IAC7B,IAAIA,KAAK,CAACK,GAAG,KAAK,GAAG,EAAE;MACrBL,KAAK,CAACE,cAAc,CAAC,CAAC;MACtBH,WAAW,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,IAAIZ,aAAa,CAACS,KAAK,CAACR,IAAI,CAAC,EAAE;IAC7BQ,KAAK,CAACS,IAAI,GAAGT,KAAK,CAACS,IAAI,IAAI,QAAQ,CAAC,CAAC;IACrC;;IAEAT,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,IAAI,GAAG;EAChC;EAEA,IAAIM,QAAQ,EAAE;IACZE,KAAK,CAACU,QAAQ,GAAG,CAAC,CAAC;IACnBV,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI;EAC/B;EAEA,OAAO,aAAaV,IAAI,CAACO,SAAS,EAAE;IAClCI,GAAG,EAAEA,GAAG;IACR,GAAGD,KAAK;IACRI,OAAO,EAAEF,WAAW;IACpBH,SAAS,EAAEX,qBAAqB,CAACmB,aAAa,EAAER,SAAS;EAC3D,CAAC,CAAC;AACJ,CAAC,CAAC;AACFL,UAAU,CAACiB,WAAW,GAAG,YAAY;AACrC,eAAejB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}