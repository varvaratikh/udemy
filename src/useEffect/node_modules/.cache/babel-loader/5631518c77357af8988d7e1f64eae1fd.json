{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","map":{"version":3,"names":["React","PropTypes","Dropdown","DropdownToggle","DropdownMenu","alignPropType","jsx","_jsx","jsxs","_jsxs","propTypes","id","any","href","string","onClick","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","oneOf","bsPrefix","variant","size","DropdownButton","forwardRef","children","props","ref","childBsPrefix","role","renderOnMount","displayName"],"sources":["/Users/varvaratihonova/WebstormProjects/udemy/src/useEffect/node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,aAAa,QAAQ,SAAS;AACvC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,MAAMC,SAAS,GAAG;EAChB;AACF;AACA;AACA;AACA;EACEC,EAAE,EAAEV,SAAS,CAACW,GAAG;EAEjB;EACAC,IAAI,EAAEZ,SAAS,CAACa,MAAM;EAEtB;EACAC,OAAO,EAAEd,SAAS,CAACe,IAAI;EAEvB;EACAC,KAAK,EAAEhB,SAAS,CAACiB,IAAI,CAACC,UAAU;EAEhC;EACAC,QAAQ,EAAEnB,SAAS,CAACoB,IAAI;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAEjB,aAAa;EAEpB;EACAkB,QAAQ,EAAEtB,SAAS,CAACa,MAAM;EAE1B;EACAU,iBAAiB,EAAEvB,SAAS,CAACoB,IAAI;EAEjC;AACF;AACA;AACA;AACA;EACEI,cAAc,EAAExB,SAAS,CAACa,MAAM;EAEhC;AACF;AACA;AACA;AACA;EACEY,WAAW,EAAEzB,SAAS,CAAC0B,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;EAEtC;EACAC,QAAQ,EAAE3B,SAAS,CAACa,MAAM;EAE1B;EACAe,OAAO,EAAE5B,SAAS,CAACa,MAAM;EAEzB;EACAgB,IAAI,EAAE7B,SAAS,CAACa;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMiB,cAAc,GAAG,aAAa/B,KAAK,CAACgC,UAAU,CAAC,CAAC;EACpDf,KAAK;EACLgB,QAAQ;EACRL,QAAQ;EACRH,cAAc;EACdI,OAAO;EACPC,IAAI;EACJP,QAAQ;EACRC,iBAAiB;EACjBJ,QAAQ;EACRP,IAAI;EACJF,EAAE;EACFe,WAAW;EACX,GAAGQ;AACL,CAAC,EAAEC,GAAG,KAAK,aAAa1B,KAAK,CAACP,QAAQ,EAAE;EACtCiC,GAAG,EAAEA,GAAG;EACR,GAAGD,KAAK;EACRD,QAAQ,EAAE,CAAC,aAAa1B,IAAI,CAACJ,cAAc,EAAE;IAC3CQ,EAAE,EAAEA,EAAE;IACNE,IAAI,EAAEA,IAAI;IACViB,IAAI,EAAEA,IAAI;IACVD,OAAO,EAAEA,OAAO;IAChBT,QAAQ,EAAEA,QAAQ;IAClBgB,aAAa,EAAER,QAAQ;IACvBK,QAAQ,EAAEhB;EACZ,CAAC,CAAC,EAAE,aAAaV,IAAI,CAACH,YAAY,EAAE;IAClCiC,IAAI,EAAEd,QAAQ;IACde,aAAa,EAAEd,iBAAiB;IAChCC,cAAc,EAAEA,cAAc;IAC9BI,OAAO,EAAEH,WAAW;IACpBO,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACHF,cAAc,CAACQ,WAAW,GAAG,gBAAgB;AAC7CR,cAAc,CAACrB,SAAS,GAAGA,SAAS;AACpC,eAAeqB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}