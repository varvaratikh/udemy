{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignRight = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignRight = true;\n    }\n  }\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    alignEnd,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n    menuProps.align = align;\n  }\n  let style = props.style;\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = {\n      ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","map":{"version":3,"names":["classNames","React","useContext","useDropdownMenu","useMergedRefs","warning","DropdownContext","InputGroupContext","NavbarContext","useBootstrapPrefix","useWrappedRefWithWarning","alignPropType","jsx","_jsx","defaultProps","flip","DropdownMenu","forwardRef","bsPrefix","className","align","rootCloseEvent","show","showProps","renderOnMount","as","Component","popperConfig","variant","props","ref","alignRight","isNavbar","prefix","contextAlign","isInputGroup","alignClasses","keys","Object","process","env","NODE_ENV","length","brkPoint","direction","push","menuProps","hasShown","popper","alignEnd","toggle","usePopper","offset","close","style","placement","displayName"],"sources":["/Users/varvaratihonova/WebstormProjects/udemy/src/useEffect/node_modules/react-bootstrap/esm/DropdownMenu.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignRight = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignRight = true;\n    }\n  }\n\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    alignEnd,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}